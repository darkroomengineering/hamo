{"version":3,"file":"index.mjs","sources":["../src/hooks/use-click-outside-event.js","../src/hooks/use-debug.js","../src/misc/util.js","../src/hooks/use-isomorphic-layout-effect.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-event-bus.js","../src/hooks/use-frame.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-is-visible.js","../src/hooks/use-media-query.js","../src/hooks/use-rect.js","../src/hooks/use-slots.js"],"sourcesContent":["/**\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\n * @param {Object} ref - React ref for the element to listen for clicks outside of\n * @param {Function} callback - callback function to call when a click outside of the element is detected\n */\n\nimport { useCallback, useEffect } from 'react'\n\nexport function useOutsideClickEvent(ref, callback) {\n  const handleClickOutside = useCallback(\n    (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        callback()\n      }\n    },\n    [ref, callback]\n  )\n\n  useEffect(() => {\n    if (ref.current) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }\n  }, [handleClickOutside, ref])\n}\n\nexport default useOutsideClickEvent\n","/**\n * @summary A hook that returns true if the current window URL contains the\n *   string #debug or if we're in development mode.\n * @returns {Boolean} True if current window URL contains the string #debug or\n *   if we're in development mode, false otherwise.\n */\n\nimport { useMemo } from 'react'\n\nexport const useDebug = () => {\n  const debug = useMemo(\n    () =>\n      typeof window !== 'undefined'\n        ? window.location.href.includes('#debug') ||\n          process.env.NODE_ENV === 'development'\n        : false,\n    []\n  )\n  return debug\n}\n\nexport default useDebug\n","// This code exports the functions isBrowser, noop, on, and off\n\n// isBrowser is a variable that is a boolean, it checks if window is defined\nexport const isBrowser = typeof window !== 'undefined'\n\n// noop is an empty function\nexport const noop = () => {}\n\n// on is a function that takes an object as the first argument and calls the addEventListener method on it\nexport const on = (obj, ...args) => {\n  if (obj && obj.addEventListener) {\n    obj.addEventListener(...args)\n  } else {\n    throw new Error('addEventListener is not supported')\n  }\n}\n\n// off is a function that takes an object as the first argument and calls the removeEventListener method on it\nexport const off = (obj, ...args) => {\n  if (obj && obj.removeEventListener) {\n    obj.removeEventListener(...args)\n  } else {\n    throw new Error('removeEventListener is not supported')\n  }\n}\n","/**\n * A React hook that uses the useLayoutEffect hook in environments that support it,\n * and falls back to useEffect in environments that don't support useLayoutEffect.\n *\n * @param {function} effect The effect function to call\n * @param {array} deps An array of dependencies to use for the effect\n */\n\nimport { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\nimport { isBrowser } from '../misc/util'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n\nexport default useLayoutEffect\n","// useDocumentReadyState.js\n// This code is a custom hook that returns the current document.readyState\n// The useLayoutEffect hook is used to set the state of the document\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\n\nimport { useEffect, useState } from 'react'\nimport { useLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction _useDocumentReadyState() {\n  const [readyState, setReadyState] = useState(() => {\n    if (typeof document !== 'undefined') {\n      return document.readyState\n    }\n    return 'loading'\n  })\n\n  useLayoutEffect(() => {\n    if (typeof document === 'undefined') return\n\n    setReadyState(document.readyState)\n\n    function onStateChange() {\n      setReadyState(document.readyState)\n    }\n\n    document.addEventListener('readystatechange', onStateChange, false)\n\n    return () =>\n      document.removeEventListener('readystatechange', onStateChange, false)\n  }, [])\n\n  useEffect(() => {\n    if (typeof document === 'undefined') return\n\n    if (document.readyState === 'complete') {\n      setReadyState('complete')\n    }\n  }, [])\n\n  return readyState\n}\n\nexport const useDocumentReadyState =\n  typeof window !== 'undefined' ? _useDocumentReadyState : () => undefined\n\nexport default useDocumentReadyState\n","// This is a custom hook that creates a global event bus. It consists of a dispatch function and a subscribe function.\n\nimport { useEffect } from 'react'\n\nlet subscribers = []\n\n// The subscribe function is used to subscribe to an event. It returns a function that can be used to unsubscribe from the event. The subscribe function takes a filter and a callback function. The filter can be a string or a function. If the filter is a string, the event will be delivered to the callback if the event type matches the string. If the filter is a function, the event will be delivered to the callback if the function returns true when called with the event.\nconst subscribe = (filter, callbackFn) => {\n  if (filter === undefined || filter === null) throw new Error('Invalid filter')\n  if (callbackFn === undefined || callbackFn === null)\n    throw new Error('Invalid callback')\n\n  subscribers = [...subscribers, [filter, callbackFn]]\n\n  return () => {\n    subscribers = subscribers.filter(\n      (subscriber) => subscriber[1] !== callbackFn\n    )\n  }\n}\n\n// The dispatch function is used to send an event to all subscribers that have subscribed to the event.\nexport const dispatch = (event) => {\n  let { type } = event\n  if (typeof event === 'string') type = event\n\n  const args = []\n  if (typeof event === 'string') args.push({ type })\n  else args.push(event)\n\n  subscribers.forEach(([filter, callbackFn]) => {\n    if (typeof filter === 'string' && filter !== type) return\n    if (typeof filter === 'function' && !filter(...args)) return\n    callbackFn(...args)\n  })\n}\n\n// The custom hook also takes dependencies. The dependencies are used to determine when the subscribe function should be called again. This is useful if you want to subscribe to an event only once. The custom hook returns the dispatch function.\nexport const useEventBus = (type, callback, deps = []) => {\n  useEffect(() => subscribe(type, callback), [...deps, callback, type])\n\n  return dispatch\n}\n\nexport default useEventBus\n","/**\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\n * @param {Function} callback - A function that is called every frame.\n * @param {Number} priority - A number that determines the order in which the callback is called.\n * @returns {Number} The ID of the callback.\n */\n\nimport { raf } from '@studio-freight/tempus'\nimport { useEffect, useState } from 'react'\n\nexport function useFrame(callback, priority = 0) {\n  const [id, setId] = useState()\n\n  useEffect(() => {\n    if (callback) {\n      const id = raf.add(callback, priority)\n      setId(id)\n\n      return () => {\n        raf.remove(id)\n      }\n    }\n  }, [callback, priority])\n\n  useEffect(() => {\n    return () => {\n      if (id) {\n        raf.remove(id)\n      }\n    }\n  }, [id])\n}\n\nexport default useFrame\n","/**\n * This function allows you to set an interval in a functional component\n * @param {function} callback - The callback function\n * @param {number} delay - The delay between each interval\n */\n\nimport { useEffect, useRef } from 'react'\n\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef()\n  const intervalId = useRef()\n\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n\n    if (delay !== null) {\n      intervalId.current = setInterval(tick, delay)\n      return () => clearInterval(intervalId.current)\n    }\n  }, [delay])\n\n  return () => clearInterval(intervalId.current)\n}\n\nexport default useInterval\n","/*\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\n  as well as the maxTouchPoints property on the navigator object. It also checks the\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\n*/\n\nimport { useCallback, useEffect, useState } from 'react'\nimport { isBrowser } from '../misc/util'\n\nconst useIsTouchDevice = () => {\n  const check = useCallback(() => {\n    try {\n      return (\n        'ontouchstart' in window ||\n        navigator.maxTouchPoints > 0 ||\n        navigator.msMaxTouchPoints > 0\n      )\n    } catch (error) {\n      return false\n    }\n  }, [])\n\n  const [isTouchDevice, setIsTouchDevice] = useState(check())\n\n  const onResize = useCallback(() => {\n    setIsTouchDevice(check())\n  }, [check])\n\n  useEffect(() => {\n    onResize()\n    window.addEventListener('resize', onResize, { passive: true })\n\n    return () => {\n      window.removeEventListener('resize', onResize, { passive: true })\n    }\n  }, [onResize])\n\n  return isTouchDevice\n}\n\nexport default isBrowser ? useIsTouchDevice : () => undefined\n","// useIsVisible is a custom hook that allows you to detect when an element is\n// visible on the screen. It takes an object as an argument, and returns an object\n// with two properties: setRef and inView.\n\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\nexport const useIsVisible = ({\n  root = null,\n  rootMargin = '0px',\n  threshold = 1.0,\n  once = false,\n} = {}) => {\n  const observer = useRef()\n  const ref = useRef()\n  const [inView, setInView] = useState(false)\n\n  const setRef = useCallback((node) => {\n    if (!ref.current) {\n      ref.current = node\n    }\n  }, [])\n\n  const callbackFunction = useCallback((entries) => {\n    const [entry] = entries\n    setInView(entry.isIntersecting)\n  }, [])\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver(callbackFunction, {\n      root,\n      rootMargin,\n      threshold,\n    })\n    if (ref.current) observer.current.observe(ref.current)\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect()\n      }\n    }\n  }, [callbackFunction])\n\n  useEffect(() => {\n    if (once && inView) {\n      observer.current.disconnect()\n    }\n  }, [inView])\n\n  return { setRef, inView }\n}\n\nexport default useIsVisible\n","/**\n * @name useMediaQuery\n * @description A React hook that detects whether a media query is true or false.\n * @param {string} queryString - The media query to test against.\n * @returns {boolean} - Whether the media query is true or false.\n */\n\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { isBrowser } from '../misc/util'\n\nconst useMediaQuery = (queryString) => {\n  const mediaQuery = useMemo(() => {\n    if (isBrowser) {\n      try {\n        return window.matchMedia(queryString)\n      } catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(error)\n        }\n      }\n    }\n\n    return null\n  }, [queryString])\n\n  const [isMatch, setIsMatch] = useState(\n    mediaQuery ? mediaQuery.matches : false\n  )\n\n  const onChange = useCallback(({ matches }) => {\n    setIsMatch(matches)\n  }, [])\n\n  useEffect(() => {\n    if (mediaQuery) {\n      onChange(mediaQuery)\n\n      mediaQuery.addEventListener('change', onChange, { passive: true })\n\n      return () => {\n        mediaQuery.removeEventListener('change', onChange, { passive: true })\n      }\n    }\n  }, [mediaQuery, onChange])\n\n  return isMatch\n}\n\nexport default useMediaQuery\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { throttle } from 'throttle-debounce'\n\n// offsetTop function returns the offsetTop value of a DOM element.\n// The offsetTop value is the distance between the top of the element\n// and the top of the viewport.\nexport function offsetTop(element, accumulator = 0) {\n  const top = accumulator + element.offsetTop\n  if (element.offsetParent) {\n    return offsetTop(element.offsetParent, top)\n  }\n  return top\n}\n\n// offsetLeft function returns the offsetLeft value of a DOM element.\n// The offsetLeft value is the distance between the left of the element\n// and the left of the viewport.\nexport function offsetLeft(element, accumulator = 0) {\n  const left = accumulator + element.offsetLeft\n  if (element.offsetParent) {\n    return offsetLeft(element.offsetParent, left)\n  }\n  return left\n}\n\nexport function useRect({\n  // ignoreTransform = true,\n  lazy = false,\n  debounce = 1000,\n} = {}) {\n  const element = useRef()\n  const resizeObserver = useRef()\n\n  const [rect, setRect] = useState({})\n  const lazyRect = useRef(rect)\n\n  const resize = useCallback(() => {\n    if (element.current) {\n      const top = offsetTop(element.current)\n      const left = offsetLeft(element.current)\n\n      lazyRect.current = { ...lazyRect.current, top, left }\n      if (!lazy) {\n        setRect(lazyRect.current)\n      }\n    }\n  }, [lazy])\n\n  // resize if body height changes\n  useEffect(() => {\n    const callback = throttle(debounce, resize)\n    const resizeObserver = new ResizeObserver(callback)\n    resizeObserver.observe(document.body)\n\n    return () => {\n      resizeObserver.disconnect()\n      callback.cancel({ upcomingOnly: true })\n    }\n  }, [debounce, resize])\n\n  const onResizeObserver = useCallback(\n    ([entry]) => {\n      const { width, height } = entry.contentRect\n\n      lazyRect.current = { ...lazyRect.current, width, height }\n      if (!lazy) {\n        setRect(lazyRect.current)\n      }\n    },\n    [lazy]\n  )\n\n  const getRect = useCallback(() => lazyRect.current, [])\n\n  useEffect(() => {\n    return () => {\n      // avoid strict mode double execution\n      if (process.env.NODE_ENV !== 'development') {\n        // disconnect resizeObserver on unmount\n        resizeObserver.current?.disconnect()\n      }\n    }\n  }, [])\n\n  const setRef = useCallback(\n    (node) => {\n      if (!node || node === element.current) return\n\n      resizeObserver.current?.disconnect()\n      resizeObserver.current = new ResizeObserver(onResizeObserver)\n      resizeObserver.current.observe(node)\n      element.current = node\n    },\n    [resize]\n  )\n\n  return [setRef, lazy ? getRect : rect]\n}\n\nexport default useRect\n","// This code is used to extract the contents of a component's children and return them as an array.\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\n// The code returns an array of the children of the components passed in the types argument.\n// based on:\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\n\nimport { useMemo } from 'react'\n\nexport const useSlots = (types = [], children = []) => {\n  const _children = useMemo(() => children && [children].flat(), [children])\n  const _types = useMemo(() => types && [types].flat(), [types])\n  const slots = useMemo(() => {\n    if (!_children || !_types) {\n      return\n    }\n\n    const slots = _types.map(\n      (type) => _children.find((el) => el.type === type)?.props.children\n    )\n\n    return types[0] ? slots : slots[0]\n  }, [_children, _types])\n\n  return slots\n}\n\nexport default useSlots\n"],"names":["useOutsideClickEvent","ref","callback","useCallback","event","current","contains","target","useEffect","document","addEventListener","handleClickOutside","removeEventListener","useDebug","useMemo","window","location","href","includes","process","env","NODE_ENV","isBrowser","useLayoutEffect","vanillaUseLayoutEffect","useDocumentReadyState","_useState","useState","readyState","setReadyState","onStateChange","dispatch","type","args","push","subscribers","forEach","_ref","callbackFn","filter","useEventBus","deps","Error","subscriber","subscribe","useFrame","priority","id","setId","raf","add","remove","useInterval","delay","savedCallback","useRef","intervalId","setInterval","clearInterval","useIsTouchDevice$1","check","navigator","maxTouchPoints","msMaxTouchPoints","error","isTouchDevice","setIsTouchDevice","onResize","passive","_temp","root","_ref$root","rootMargin","_ref$rootMargin","_ref$threshold","threshold","once","_ref$once","observer","inView","setInView","setRef","node","callbackFunction","entries","isIntersecting","IntersectionObserver","observe","disconnect","useMediaQuery","queryString","matchMedia","console","mediaQuery","matches","isMatch","setIsMatch","onChange","offsetTop","element","accumulator","top","offsetParent","offsetLeft","left","useRect","_ref$lazy","lazy","debounce","_ref$debounce","resizeObserver","rect","setRect","lazyRect","resize","_extends","throttle","ResizeObserver","body","cancel","upcomingOnly","onResizeObserver","_ref2","entry","_entry$contentRect","contentRect","width","height","getRect","_resizeObserver$curre","_resizeObserver$curre2","useSlots","types","children","_children","flat","_types","slots","map","find","el","_children$find","props"],"mappings":"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"}